
# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load dataset (You can use your own dataset, here using Auto MPG dataset)
# For example, downloading from seaborn library
import seaborn as sns
df = sns.load_dataset('mpg')

# Display basic info about the dataset
print(df.head())

# Drop rows with missing values
df = df.dropna()

# Define the features (X) and the target (y)
X = df[['horsepower', 'weight', 'displacement', 'acceleration', 'model_year', 'cylinders']]
y = df['mpg']  # Target: Mileage (MPG)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create the Linear Regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Plot the results
plt.scatter(y_test, y_pred)
plt.xlabel('Actual MPG')
plt.ylabel('Predicted MPG')
plt.title('Actual vs Predicted MPG')
plt.show()
